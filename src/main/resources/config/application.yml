# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
endpoints:
    enabled: false
    configprops:
        enabled: true
    health:
        enabled: true
    env:
        enabled: true

management:
    security:
        enabled: false
    context-path: /management
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
spring:
    application:
        name: coetl
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://FILL_HOST:FILL_PORT/FILL_DATABASE
        username: FILL_USER
        password: FILL_PASS
        hikari:
            maximumPoolSize: 5
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false
    jackson:
        serialization.write_dates_as_timestamps: false
    jpa:
        open-in-view: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        database-platform: io.github.jhipster.domain.util.FixedPostgreSQL82Dialect
        database: POSTGRESQL
        show-sql: false
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: false
# spring.jmx.default-domain y spring.hikari.pool-name evitan que al levantar dos aplicaciones con un spring boot similar al template
# (con beans de jmx configurado) la primera registre sus beans impidiendo a las siguientes registrar los suyos
    jmx:
      default-domain: FILL_APP_NAME # Ejemplo: ebandeja
    hikari:
        pool-name: FILL_APP_NAME_WITH_POOL # ebandejapool
    mail:
        host: FILL_HOST
        port: FILL_PORT
        username: FILL_USER
        password: FILL_PASS
        protocol: smtp
        tls: true
        properties.mail.smtp:
            auth: true
            starttls.enable: true
            ssl.trust: smtp.gmail.com
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    profiles:
        # The commented value for `active` can be replaced with valid Spring profiles to load.
        # Otherwise, it will be filled in by maven when building the WAR file
        # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
        active: #spring.profiles.active#
        include: swagger
    thymeleaf:
        cache: true
        mode: XHTML
        prefix: /

security:
    basic:
        enabled: false

info:
    project:
        version: #project.version#


# ===================================================================
# Liquidbase specific properties
# ===================================================================

liquibase:
    contexts: prod


# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alias coetl -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        keyStoreType: PKCS12
#        keyAlias: coetl
# ===================================================================
server:
    port: 8080
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024
    session:
        cookie:
            http-only: true


# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    async:
        core-pool-size: 2
        max-pool-size: 50
        queue-capacity: 10000
    # By default CORS is disabled. Uncomment to enable.
    #cors:
        #allowed-origins: "*"
        #allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        #allowed-headers: "*"
        #exposed-headers:
        #allow-credentials: true
        #max-age: 1800
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 1461
    security:
        authentication:
            jwt:
                secret: 166deddd007daacd095972fad770947e96a537c4
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: coetl@localhost
        base-url: http://my-server-url-to-change # Modify according to your server's URL
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
    swagger:
        default-include-pattern: /api/.*
        title: coetl API
        description: coetl API documentation
        version: 0.0.1
        terms-of-service-url:
        contact-name:
        contact-url:
        contact-email:
        license:
        license-url:
    ribbon:
        display-on-active-profiles: dev


# ===================================================================
# Change log levels
# ===================================================================

logging:
    level:
        org.hibernate.orm.deprecation: ERROR

# ===================================================================
# Pentaho specific properties
# Add your own Pentaho properties here
# ===================================================================

pentaho:
    endpoint: FILL_PENTAHO_ENDPOINT # Required: Pentaho Data Integration Server Endpoint
    auth:
        user: FILL_PENTAHO_USER # Required: Pentaho Data Integration Server User
        password: FILL_PENTAHO_PASSWORD # Required: Pentaho Data Integration Server Password
    host:
        os: FILL_PENTAHO_HOST_OS # Required: Pentaho Host Operating System
        address: FILL_PENTAHO_HOST_ADDRESS # Required: Pentaho Host Address
        username: FILL_PENTAHO_HOST_USERNAME # Required: Pentaho Host Username
        password: FILL_PENTAHO_HOST_PASSWORD # Required: Pentaho Host Password
        sudoUsername: FILL_PENTAHO_HOST_SUDO_USERNAME # Required: Pentaho Host Sudo Username
        sudoPassword: FILL_PENTAHO_HOST_SUDO_PASSWORD # Required: Pentaho Host Sudo Password
        sudoPasswordPromptRegex: FILL_PENTAHO_HOST_SUDO_PASSWORD_PROMPT_REGEX # Required: Pentaho Host Sudo Password Prompt Regular Expression
        sftpPath: FILL_PENTAHO_HOST_SFTP_PATH # Required: Pentaho Host SFTP Path
        resourcesPath: FILL_PENTAHO_HOST_RESOURCES_PATH # Required: Pentaho Host Resources Path
        ownerUserResourcesPath: FILL_PENTAHO_HOST_OWNER_USER_RESOURCES_PATH # Required: Pentaho Host Owner User Resources Path
        ownerGroupResourcesPath: FILL_PENTAHO_HOST_OWNER_GROUP_RESOURCES_PATH # Required: Pentaho Host Owner Group Resources Path
        mainResourcePrefix: FILL_KEY_PENTAHO_MAIN_RESOURCE_PREFIX # Required: Pentaho main resources prefix
git:
    username: FILL_WITH_GIT_USER # Required: GIT owner username for access
    password: FILL_WITH_GIT_PASSWORD # Required: GIT owner password for access
    branch: FILL_WITH_BRANCH # Required: GIT ETL branch for ETL execution
# ===================================================================
# AES Encript specific properties
# Add your own aes properties here
# ===================================================================
aes:
    secretKeySalt: FILL_SECRET_KEY_SALT # Required: secret key salt fr generated KeySpec
    secretKeyPassword: FILL_SECRET_KEY_PASSWORD # Required: For example application name COETL_GOBCAN

# ===================================================================
# Application specific properties
# Add your own application properties here
# ===================================================================
application:
    cas:
        endpoint: FILL_CAS_ENDPOINT # Required: Cas Endpoint
        service: FILL_SERVICE_URL # Required: Aplication service
        login:  # Optional: Only change if needed (Leave empty for cas.enpoint + '/login')
        logout: # Optional: Only change if needed(Leave empty for cas.enpoint + '/logout')
        validate: # Optional: Only change if needed (Leave empty for 2.0 Cas Protocol). For CAS 3.0 protocol change for 'p3'
    installation:
        type: FILL_INSTALLATION_TYPE # Required: Installation Type Context (EXTERNAL / INTERNAL)
    enviroment: FILL_WITH_ENVIROMENT_NAME # Use value PRODUCTION to disable enviroment info in the email error subject